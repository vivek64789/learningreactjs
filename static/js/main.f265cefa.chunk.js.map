{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","darkMode","to","title","url","name","type","id","about","placeholder","onClick","toggleDarkMode","role","TextForm","useState","text","setText","heading","value","onChange","e","target","style","height","htmlFor","toUpperCase","showAlert","length","toLowerCase","split","Alert","alert","word","lower","charAt","slice","convertToCapitalize","message","About","defaultProps","home","contact","App","setDarkMode","setalert","msg","typ","setTimeout","document","body","backgroundColor","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f265cefa.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Navbar(props) {\n  return (\n    <nav\n      className={`navbar navbar-expand-lg navbar-${props.darkMode} bg-${\n        props.darkMode === \"light\" ? \"light\" : \"dark\"\n      } shadow`}\n    >\n      <div className=\"container-fluid\">\n        <Link className=\"navbar-brand\" to={props.title.url}>\n          {props.title.name}\n        </Link>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n            <li className=\"nav-item\">\n              <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\n                Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link\n                className=\"nav-link\"\n                aria-current=\"page\"\n                to={props.about.url}\n              >\n                {props.about.name}\n              </Link>\n            </li>\n          </ul>\n          <form className=\"d-flex\">\n            <input\n              className=\"form-control me-2\"\n              type=\"search\"\n              placeholder=\"Search\"\n              aria-label=\"Search\"\n            />\n            <button className=\"btn btn-outline-success\" type=\"submit\">\n              Search\n            </button>\n          </form>\n          {/* Dark mode button */}\n            <label className={`form-check-label mx-2 text-${props.darkMode==='light'?'dark':'light'}`}>\n              Light\n            </label>\n          <div className=\"form-check form-switch\">\n            <input\n            onClick={props.toggleDarkMode}\n              className=\"form-check-input\"\n              type=\"checkbox\"\n              role=\"switch\"\n            />\n            <label className={`form-check-label mx-2 text-${props.darkMode==='light'?'dark':'light'}`}>\n              Dark\n            </label>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\n// Proptypes is just to validate the props that are passed to the component\nNavbar.propTypes = {\n  title: PropTypes.object.isRequired,\n  about: PropTypes.object.isRequired,\n};\n\n// set default props\nNavbar.defaultProps = {\n  title: { url: \"/\", name: \"Title\" },\n  about: { url: \"/about\", name: \"About\" },\n  home: { url: \"/\", name: \"Home\" },\n};\n","import React, { useState } from \"react\";\n\nexport default function TextForm(props) {\n  const handleOnClick = (e) => {\n    // e.preventDefault();\n    // setText(\"You have changed the value of text\");\n    setText(text.toUpperCase());\n    props.showAlert(\"Converted to Uppercase\", \"success\");\n    \n\n    // console.log(\"Clicked!\");\n  };\n  const handleOnClickLowercase = (e) => {\n    // e.preventDefault();\n    // setText(\"You have changed the value of text\");\n    setText(text.toLowerCase());\n    props.showAlert(\"Converted to Lowercase\", \"success\");\n    // console.log(\"Clicked!\");\n  };\n  const handleOnChange = (e) => {\n    // e.preventDefault();\n    setText(e.target.value);\n    // console.log(\"Changed!\");\n  };\n  const [text, setText] = useState(\"\");\n  return (\n    <>\n      <div\n        className={`container my-5 text-${\n          props.darkMode === \"light\" ? \"dark\" : \"light\"\n        }`}\n      >\n        <h2>{props.heading}</h2>\n        <div className=\"form-floating\">\n          <textarea\n            value={text}\n            onChange={handleOnChange}\n            style={{ height: \"200px\" }}\n            className={`form-control bg-${\n              props.darkMode === \"dark\" ? \"dark\" : \"light\"\n            } text-${props.darkMode === \"light\" ? \"dark\" : \"light\"}`}\n            placeholder=\"Leave a comment here\"\n            id=\"floatingTextarea\"\n          ></textarea>\n          <label htmlFor=\"floatingTextarea\">\n            Enter the text below to analyze\n          </label>\n\n          <button onClick={handleOnClick} className={`btn btn-primary my-4 mx-1 ${text.length===0?'disabled':''}`}>\n            Convert to Uppercase\n          </button>\n          <button\n            onClick={handleOnClickLowercase}\n            className={`btn btn-primary my-4 mx-1 ${text.length===0?'disabled':''}`}\n          >\n            Convert to Lowercase\n          </button>\n          <p>{text}</p>\n        </div>\n      </div>\n\n      <div\n        className={`container text-${\n          props.darkMode === \"light\" ? \"dark\" : \"light\"\n        }`}\n      >\n        <h3>Your text summary</h3>\n        <p>\n          Total Words: {text.split(\" \").length} <br /> Total Characters:{\" \"}\n          {text.length}\n        </p>\n        <p>{0.0055 * text.split(\" \").length} Minutes Read</p>\n      </div>\n      \n    </>\n  );\n}\n","import React from \"react\";\n\nexport default function Alert(props) {\n    const convertToCapitalize = (word)=>{\n        let lower = word.toLowerCase();\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\n    }\n  return (\n    props.alert && <div>\n      {/* This is alert box */}\n     <div\n        className={`alert alert-${props.alert.type} alert-dismissible fade show`}\n        role=\"alert\"\n      >\n        <strong>{convertToCapitalize(props.alert.type)} : {props.alert.message}</strong>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function About(props) {\n  return (\n    <div className={`container bg-${props.darkMode==='dark'?'dark':'white'} text-${props.darkMode==='light'?'dark':'light'}`} >\n      <h1>About us</h1>\n      Lorem ipsum dolor sit amet consectetur adipisicing elit. Incidunt, minima\n      rerum? Repudiandae optio soluta, commodi corrupti reprehenderit fugit\n      dolorum animi recusandae voluptatum. Laudantium non doloribus rerum\n      commodi nihil, rem unde minus soluta vel voluptate. Veritatis harum\n      accusamus id quod voluptas tenetur odit dolore in non perferendis. Qui\n      facilis voluptates ipsa.\n    </div>\n  );\n}\n","import \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport Alert from \"./components/Alert\";\nimport About from \"./components/About\";\n\nimport React, { useState } from \"react\";\n\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nlet title = { name: \"Text Utils\", url: \"/\" };\nlet home = { name: \"Home\", url: \"/home\" };\nlet about = { name: \"About\", url: \"/about\" };\nlet contact = { name: \"Contact\", url: \"/contact\" };\n\nfunction App() {\n  const [darkMode, setDarkMode] = useState(\"light\");\n  const [alert, setalert] = useState(null);\n\n  const showAlert = (msg, typ) => {\n    setalert({ message: msg, type: typ });\n    setTimeout(() => {\n      setalert(null);\n    }, 2000);\n  };\n\n  const toggleDarkMode = () => {\n    if (darkMode === \"light\") {\n      setDarkMode(\"dark\");\n      document.body.style.backgroundColor = \"#212529\";\n      showAlert(\"Dark Mode Activated\", \"success\");\n    } else {\n      setDarkMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode Activated\", \"success\");\n    }\n  };\n  return (\n    <>\n      <Router>\n        <Navbar\n          showAlert={showAlert}\n          toggleDarkMode={toggleDarkMode}\n          darkMode={darkMode}\n          title={title}\n          home={home}\n          about={about}\n          contact={contact}\n        />\n        <Alert alert={alert} />\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route exact path=\"/about\">\n            <About darkMode={darkMode} />\n          </Route>\n          <Route exact path=\"/\">\n            <TextForm\n              showAlert={showAlert}\n              darkMode={darkMode}\n              heading=\"Enter your text\"\n            />\n          </Route>\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}